library(rJava)
iinstall.packages("rJava")
install.packages("rJava")
install.packages("methods")
install.packages("ReporteRs")
install.packages("rJava")
rpois(n, 1.5)
rpois(10, 1.5)
rpois(10, 100)
rpois(10, 30)
source('~/.active-rstudio-document')
DFgen(n=11)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
DFgen(n=11)
DFgen(n=150)
anovaDf <- DFgen(n=150)
rnorm(n, 18)
rnorm(10, 18)
floor(rnorm(n, 18))
floor(rnorm(10, 18))
floor(rnorm(n, 18, sd = 5)
)
floor(rnorm(10, 18, sd = 5))
source('~/.active-rstudio-document')
anovaDf <- DFgen(n=150)
head(anovaDf)
anovaDf$ttpr[anovaDf$sex == "male"]
anovaDf$ttpr[anovaDf$sex == "female"] <- anovaDf$ttpr[anovaDf$sex == "female"] + 3
anovaDf$ttpr[anovaDf$treatment == "A"] <- anovaDf$ttpr[anovaDf$treatment == "A"] + 3
anovaDf$ttpr[anovaDf$treatment == "B"] <- anovaDf$ttpr[anovaDf$treatment == "B"] - 5
head(anovaDf)
boxplot(anovaDf$ttpr ~ anovaDf$sex)
anovaDf$ttpr[anovaDf$sex == "female"] <- anovaDf$ttpr[anovaDf$sex == "female"] + 6
boxplot(anovaDf$ttpr ~ anovaDf$sex)
boxplot(anovaDf$ttpr ~ anovaDf$treatment)
boxplot(anovaDf$ttpr ~ anovaDf$treatment + anovaDf$sex)
getwd()
write.csv(anovaDf, "ANOVAdata.csv")
write.csv(anovaDf, "ANOVAdata.csv", row.names = NULL)
write.csv(anovaDf, "ANOVAdata.csv", row.names = FALSE)
obj <- lm(anovaDf$ttpr ~ anovaDf$sex + anovaDf$treatment)
anova(obj)
anovaDf <- DFgen(n=150)
anovaDf$ttpr[anovaDf$treatment == "A"] <- anovaDf$ttpr[anovaDf$treatment == "A"] + 3
anovaDf$ttpr[anovaDf$treatment == "B"] <- anovaDf$ttpr[anovaDf$treatment == "B"] - 4
anovaDf$ttpr[anovaDf$sex == "female"] <- anovaDf$ttpr[anovaDf$sex == "female"] + 2
boxplot(anovaDf$ttpr ~ anovaDf$treatment + anovaDf$sex)
obj <- lm(anovaDf$ttpr ~ anovaDf$sex + anovaDf$treatment)
anova(obj)
anovaDf <- DFgen(n=150)
anovaDf$ttpr[anovaDf$treatment == "A"] <- anovaDf$ttpr[anovaDf$treatment == "A"] + 3
anovaDf$ttpr[anovaDf$treatment == "B"] <- anovaDf$ttpr[anovaDf$treatment == "B"] - 4
anovaDf$ttpr[anovaDf$sex == "female"] <- anovaDf$ttpr[anovaDf$sex == "female"] + 3
boxplot(anovaDf$ttpr ~ anovaDf$treatment + anovaDf$sex)
obj <- lm(anovaDf$ttpr ~ anovaDf$sex + anovaDf$treatment)
anova(obj)
anovaDf$ttpr[anovaDf$sex == "female"] <- anovaDf$ttpr[anovaDf$sex == "female"] - 1
obj <- lm(anovaDf$ttpr ~ anovaDf$sex + anovaDf$treatment)
anovaDf$ttpr[anovaDf$sex == "female"] <- anovaDf$ttpr[anovaDf$sex == "female"] - 1
anovaDf$ttpr[anovaDf$sex == "female"] <- anovaDf$ttpr[anovaDf$sex == "female"] + 1
obj <- lm(anovaDf$ttpr ~ anovaDf$sex + anovaDf$treatment)
anova(obj)
obj1 <- lm(anovaDf$ttpr ~ anovaDf$sex)
obj2 <- lm(anovaDf$ttpr ~ anovaDf$treatment)
anova(obj1, obj2)
?aov
obj <- aov(anovaDf$ttpr ~ anovaDf$sex*anovaDf$treatment)
anova(obj)
Anova(obj)
''
''
sample(1:5, n = 3, replace = FALSE)
sample(1:5, size = 3, replace = FALSE)
sample(1:7, size = 2, replace = FALSE)
sample(1:7, size = 3, replace = FALSE)
sample(1:7, size = 3, replace = FALSE)
sample(1:10, size = 3, replace = FALSE)
sample(1:2, size = 1, replace = FALSE)
download.file("http://www.openintro.org/stat/data/mlb11.RData", destfile = "mlb11.RData")
load("mlb11.RData")
cor(mlb11$runs, mlb11$at_bats)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
m1 <- lm(runs ~ at_bats, data = mlb11)
summary(m1)
abline(m1)
plot(mlb11$runs ~ mlb11$at_bats)
abline(m1)
plot(mlb11$runs, m1$residuals)
abline(y = 0)
abline(h = 0)
plot(mlb11$at_bats, m1$residuals)
abline(h = 0)
m1 <- lm(runs ~ homeruns, data = mlb11)
summary(m1)
plot(mlb11$homeruns, m1$residuals)
abline(h = 0)
plot(mlb11$runs, m1$residuals)
abline(h = 0)
plot(log(mlb11$runs), m1$residuals)
abline(h = 0)
plot(m1$residuals, log(mlb11$runs))
m1 <- lm(log(runs) ~ homeruns, data = mlb11)
summary(m1)
plot(m1$residuals, log(mlb11$runs))
plot(mlb11$homeruns, m1$residuals)
qqnorm(m1$residuals)
qqline(m1$residuals)
extraOptions <- paste0('-t ', jobType, ' -o "%.10i"')
jobType = "SUSPENDED"
extraOptions <- paste0('-t ', jobType, ' -o "%.10i"')
extraOptions
extraOptionsString <- paste0('-t ', jobType, ' -o "%.10i"')
apply(acceptOfvs, 2, function(x){
mean(x)
})
getwd()
setwd("C:/Users/bjuny231/Dropbox/Doktorandsaker/Papers/Data/nmDismount_Jonsson")
# For each model I combine the ofvs from the different settings into a data frame
# First the initial parallel retries
paraRetriesCsvFileName <- "paraRetriesOfvs.csv"
paraRetriesCsv <- read.csv(paraRetriesOfvsFileName, header = TRUE)
paraRetriesOfvs <- paraRetriesCsv$paraRetriesOfv
paraRetriesRetry <- paraRetriesCsv$retry
# Hardcoding a max length for now. Could parse command or count
maxLength <- 1000
length(paraRetriesOfvs) <- maxLength
length(paraRetriesRetry) <- maxLength
# Inefficient rawres file finding...
nmDismountRawresPaths <-  list.files(path = "nmDismountRuns",
pattern = "raw_results_.+csv$",
recursive = TRUE, full.names = TRUE)
# Parsing out the OFVs from the each rawres file
nmDismountOfvsList <- lapply(nmDismountRawresPaths, function(x){
# Get the relevant OFVs
ofvs <- parseRawres(x, cols = "ofv")
# Name the vector after the settings (splitting folder name should work but
# assumes known file structure)
settingsUsed <- unlist(strsplit(x, "/"))[2]
names(ofvs) <- settingsUsed
return(ofvs)
})
nmDismountOfvs <- do.call("cbind", nmDismountOfvsList)
allOfvs <- cbind(paraRetriesRetries, paraRetriesOfvs, nmDismountOfvs)
minOfv <- min(allOfvs[2:length(allOfvs)], na.rm = TRUE)
limOfv <- minOfv + 1
acceptOfvs <- apply(allOfvs[2:length(allOfvs)], c(1, 2), function(x){
if(is.na(x)){
return(NA)
}
if(x <= limOfv){
return(1)
}else{
return(0)
}
})
nmDismountOfvs
nmDismountOfvs <- read.csv("nmDismountOfvs.csv")
head(nmDismountOfvs)
getwd()
acceptOfvs <- read.csv("acceptOfvs.csv")
head(acceptOfvs)
apply(acceptOfvs, 2, function(x){
mean(x)
})
apply(acceptOfvs, 2, function(x){
mean(x, na.rm = TRUE)
})
apply(acceptOfvs, 2, function(x){
c(mean(x, na.rm = TRUE), 1, 1)
})
apply(acceptOfvs, 2, function(x){
failedRuns <- sum(is.na(x))/length(x)
return(c(failedRuns))
})
library(scales)
apply(acceptOfvs, 2, function(x){
failedPercentage <- percent(sum(is.na(x))/length(x))
# acceptPercentage <-
# unacceptPercentage
return(c(failedRuns))
})
apply(acceptOfvs, 2, function(x){
failedPercentage <- percent(sum(is.na(x))/length(x))
# acceptPercentage <-
# unacceptPercentage
return(c(failedPercentage))
})
apply(acceptOfvs, 2, function(x){
failedPercentage <- percent(sum(is.na(x))/length(x))
acceptPercentage <- percent(sum(x, na.rm = TRUE)/length(x))
# unacceptPercentage <-
return(c(acceptPercentage, failedPercentage))
})
apply(acceptOfvs, 2, function(x){
failedPercentage <- percent(sum(is.na(x))/length(x))
acceptPercentage <- percent(sum(x == 1, na.rm = TRUE)/length(x))
unacceptPercentage <- percent(sum(x == , na.rm = TRUE)/length(x))
return(c(acceptPercentage, unacceptPercentage, failedPercentage))
})
apply(acceptOfvs, 2, function(x){
failedPercentage <- percent(sum(is.na(x))/length(x))
acceptPercentage <- percent(sum(x == 1, na.rm = TRUE)/length(x))
unacceptPercentage <- percent(sum(x == 0, na.rm = TRUE)/length(x))
return(c(acceptPercentage, unacceptPercentage, failedPercentage))
})
percentageTable <- apply(acceptOfvs, 2, function(x){
failedPercentage <- percent(sum(is.na(x))/length(x))
acceptPercentage <- percent(sum(x == 1, na.rm = TRUE)/length(x))
unacceptPercentage <- percent(sum(x == 0, na.rm = TRUE)/length(x))
return(c(acceptPercentage, unacceptPercentage, failedPercentage))
})
setwd("//user.uu.se/bmci/FBV-Users/bjuny231/Documents/GitHub/dismount/R")
library(roxygen2)
setwd("..")
roxygenise()
roxygenise()
roxygenise()
roxygenise()
rep(NA, maxLength)
c(1,0,1,0,0,0)
as.logical(c(1,0,1,0,0,0))
1:10
1:6
1:6[as.logical(c(1,0,1,0,0,0))]
1:6[as.logical(c(1,0,1,0,0,0))]
1:6[[as.logical(c(1,0,1,0,0,0))]]
1:[c(TRUE, FALSE)]
1:6[c(TRUE, FALSE)]
1:6[c(FALSE)]
1:6[c(FALSE, TRUE)]
c(1:6)[c(FALSE, TRUE)]
c(1:6)[as.logical(c(1,0,1,0,0,0))]
c(1:6)[-as.logical(c(1,0,1,0,0,0))]
c(1:6)[as.logical(c(1,0,1,0,0,0))]
c(1:6)[-as.logical(c(1,0,1,0,0,0))]
c(1:6)[as.logical(c(1,0,1,0,0,0))]
c(1:6)[as.logical(-c(1,0,1,0,0,0))]
c(1:6)[--as.logical(c(1,0,1,0,0,0))]
c(1:6)[c(1,0,1,0,0,0)]
c(1:6)[-c(1,0,1,0,0,0)]
c(1:6)[as.logical(c(1,0,1,0,0,0))]
c(1:6)[!as.logical(c(1,0,1,0,0,0))]
lala <- c(1:6)[!as.logical(c(1,0,1,0,0,0))]
lala
lala <- 1:6
lala[as.logical(c(1,0,1,0,0,0))]
lala[!as.logical(c(1,0,1,0,0,0))]
lala[!as.logical(c(1,0,1,0,0,0))] <- NA
lala
createPercentageTable
?createPercentageTable
??createPercentageTable
source('//user.uu.se/bmci/FBV-Users/bjuny231/Documents/GitHub/dismount/R/createPercentageTable.R')
rm(createPercentageTable())
rm(createPercentageTable
)
