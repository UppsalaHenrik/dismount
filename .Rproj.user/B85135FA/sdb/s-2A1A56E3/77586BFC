{
    "contents" : "\ncreatePlotlyObj <- function(ofvVector, paramVals1, paramVals2){\n  \n  xSide <- length(paramVals1)\n  \n  ySide <- length(paramVals2)\n  \n  zMatrix <- matrix(ofvVector, nrow = ySide, ncol = xSide, byrow = TRUE)\n  \n  plotlyTrace <- list(z = zMatrix, \n                      x = paramVals1, \n                      y = paramVals2,\n                      colorscale = list(c(0, \"rgb(255,0,0)\"),\n                                        list(0.01, \"rgb(200,0,0)\"),\n                                        list(0.02, \"rgb(150,0,0)\"),\n                                        list(0.03, \"rgb(100,0,0)\"),\n                                        list(0.05, \"rgb(50,0,0)\"), \n                                        list(0.20, \"rgb(255,255,255)\"),\n                                        list(0.75, \"rgb(255,255,255)\"),\n                                        list(1, \"rgb(255,255,255)\")),\n                      type = \"surface\"\n  )\n  \n  ofvRange <- c(min(ofvVector), max(ofvVector))\n  \n  layout <- list(\n    title = \"OFV Surface\", \n    titlefont = list(\n      family = \"'Open sans', verdana, arial, sans-serif\", \n      size = 17, \n      color = \"#444\"\n    ), \n    font = list(\n      family = \"'Open sans', verdana, arial, sans-serif\", \n      size = 12, \n      color = \"#444\"\n    ), \n    showlegend = TRUE, \n    autosize = TRUE, \n    width = 657, \n    height = 549, \n    legend = list(\n      x = 0.98, \n      y = 0.5, \n      traceorder = \"normal\", \n      font = list(\n        family = \"'Open sans', verdana, arial, sans-serif\", \n        size = 12, \n        color = \"#444\"\n      ), \n      bgcolor = \"rgb(255,255,255)\", \n      bordercolor = \"transparent\", \n      borderwidth = 0, \n      xanchor = \"center\", \n      yanchor = \"auto\"\n    ), \n    margin = list(\n      l = 0, \n      r = 0, \n      b = 0, \n      t = 80, \n      pad = 0, \n      autoexpand = TRUE\n    ), \n    paper_bgcolor = \"rgb(255,255,255)\", \n    plot_bgcolor = \"rgb(229,229,229)\", \n    hovermode = \"z\", \n    dragmode = \"turntable\", \n    separators = \".,\", \n    scene = list(\n      xaxis = list(\n        title = \"X: Theta 1 - V1\", \n        titlefont = list(\n          family = \"'Open sans', verdana, arial, sans-serif\", \n          size = 14, \n          color = \"rgb(102, 102, 102)\"\n        ), \n        type = \"linear\", \n        rangemode = \"normal\", \n        autorange = TRUE, \n        showgrid = TRUE, \n        zeroline = TRUE, \n        showline = FALSE, \n        autotick = TRUE, \n        nticks = 0, \n        ticks = \"\", \n        showticklabels = TRUE, \n        tick0 = 0, \n        dtick = 20, \n        tickangle = \"auto\", \n        tickfont = list(\n          family = \"'Open sans', verdana, arial, sans-serif\", \n          size = 12, \n          color = \"rgb(102, 102, 102)\"\n        ), \n        exponentformat = \"B\", \n        showexponent = \"all\", \n        gridcolor = \"rgb(255, 255, 255)\", \n        gridwidth = 2, \n        zerolinecolor = \"#444\", \n        zerolinewidth = 1, \n        showbackground = FALSE, \n        showspikes = TRUE, \n        spikesides = TRUE, \n        spikethickness = 2\n      ), \n      yaxis = list(\n        title = \"Y: Theta 2 - Q\", \n        titlefont = list(\n          family = \"'Open sans', verdana, arial, sans-serif\", \n          size = 14, \n          color = \"rgb(102, 102, 102)\"\n        ), \n        type = \"linear\", \n        rangemode = \"normal\", \n        autorange = TRUE, \n        showgrid = TRUE, \n        zeroline = TRUE, \n        showline = FALSE, \n        autotick = TRUE, \n        nticks = 0, \n        ticks = \"\", \n        showticklabels = TRUE, \n        tick0 = 0, \n        dtick = 20, \n        tickangle = \"auto\", \n        tickfont = list(\n          family = \"'Open sans', verdana, arial, sans-serif\", \n          size = 12, \n          color = \"rgb(102, 102, 102)\"\n        ), \n        exponentformat = \"B\", \n        showexponent = \"all\", \n        gridcolor = \"rgb(255, 255, 255)\", \n        gridwidth = 2, \n        zerolinecolor = \"#444\", \n        zerolinewidth = 1, \n        showbackground = FALSE, \n        showspikes = TRUE, \n        spikesides = TRUE, \n        spikethickness = 2\n      ), \n      zaxis = list(\n        title = \"Z: OFV\", \n        titlefont = list(\n          family = \"'Open sans', verdana, arial, sans-serif\", \n          size = 14, \n          color = \"rgb(102, 102, 102)\"\n        ), \n        range = ofvRange,\n        type = \"linear\", \n        rangemode = \"normal\", \n        autorange = FALSE, \n        showgrid = TRUE, \n        zeroline = TRUE, \n        showline = FALSE, \n        autotick = TRUE, \n        nticks = 0, \n        ticks = \"\", \n        showticklabels = TRUE, \n        tick0 = 0, \n        dtick = 500, \n        tickangle = \"auto\", \n        tickfont = list(\n          family = \"'Open sans', verdana, arial, sans-serif\", \n          size = 12, \n          color = \"rgb(102, 102, 102)\"\n        ), \n        exponentformat = \"B\", \n        showexponent = \"all\", \n        gridcolor = \"rgb(255, 255, 255)\", \n        gridwidth = 2, \n        zerolinecolor = \"#444\", \n        zerolinewidth = 1, \n        showbackground = FALSE, \n        showspikes = TRUE, \n        spikesides = TRUE, \n        spikethickness = 2\n      ), \n      cameraposition = list(\n        c(-0.62049958136, -0.195799695764, -0.19172102932, -0.734769212465), c(-0.0345517705009, 0.0540832558181, -0.0687389292161), 1.825423821), \n      bgcolor = \"rgba(238, 238, 238, 0.2)\"\n    ), \n    hidesources = FALSE\n  )\n  \n  data <- list(plotlyTrace)\n  \n  plotlyObj <- py$plotly(data, kwargs=list(layout=layout))\n  \n  return(plotlyObj$url)\n}\n",
    "created" : 1440161462691.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1274438171",
    "id" : "77586BFC",
    "lastKnownWriteTime" : 1437660826,
    "path" : "C:/Users/hnyberg/Dropbox/Doktorandsaker/PrecondProject/Scripts/dismount/R/createPlotlyObj.R",
    "project_path" : "R/createPlotlyObj.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}